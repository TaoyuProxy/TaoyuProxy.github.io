<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[GeekTao]]></title>
  <subtitle><![CDATA[keep calm and carry on]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://geektao.cc/"/>
  <updated>2015-03-09T07:55:21.208Z</updated>
  <id>http://geektao.cc/</id>
  
  <author>
    <name><![CDATA[GeekTao]]></name>
    <email><![CDATA[1126931536@qq.com]]></email>
  </author>
  
  <generator uri="http://zespia.tw/hexo/">Hexo</generator>
  
  <entry>
    <title><![CDATA[技术篇-JS]]></title>
    <link href="http://geektao.cc/2015/02/14/%E6%8A%80%E6%9C%AF%E7%AF%87-JS/"/>
    <id>http://geektao.cc/2015/02/14/技术篇-JS/</id>
    <published>2015-02-14T01:27:07.000Z</published>
    <updated>2015-03-09T07:55:11.000Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>JavaScript 是互联网上最流行的脚本语言，这门语言可用于 HTML 和 web，更可广泛用于服务器、PC、笔记本电脑、平板电脑和智能手机等设备。</p>
</blockquote>
<a id="more"></a>

<h3 id="javascript_变量">javascript 变量</h3>
<ul>
<li><strong>命名</strong></li>
<li><strong>变量声明</strong></li>
<li><strong>变量类型</strong></li>
<li><strong>作用域</strong></li>
</ul>
<h3 id="window_对象">window 对象</h3>
<ul>
<li><strong>navigator导航器对象</strong></li>
<li><strong>screen显示器对象</strong></li>
<li><strong>history对象</strong></li>
<li><strong>location 位置对象</strong></li>
<li><strong>document文档对象</strong></li>
<li><strong>窗口控制</strong></li>
<li><strong>焦点控制</strong></li>
<li><strong>打开关闭窗口</strong></li>
<li><strong>定时器</strong></li>
<li><strong>对话框</strong></li>
<li><strong>属性</strong></li>
<li><strong>其他属性</strong></li>
</ul>
<h3 id="javascript_Dom操作">javascript Dom操作</h3>
<ul>
<li><strong>获取结点</strong></li>
<li><strong>结点操作</strong></li>
<li><strong>属性操作</strong></li>
<li><strong>文本操作</strong></li>
</ul>
<h3 id="javascript_函数">javascript 函数</h3>
<ul>
<li><strong>定义方法</strong></li>
<li><strong>调用方法</strong></li>
<li><strong>方法</strong></li>
<li><strong>argument对象</strong></li>
<li><strong>函数参数</strong></li>
<li><strong>指针标识</strong></li>
</ul>
<h3 id="javascript_对象">javascript 对象</h3>
<ul>
<li><strong>工厂方式</strong></li>
<li><strong>构造函数</strong></li>
<li><strong>原型方式</strong></li>
<li><strong>混合的构造函数/原型方式</strong></li>
<li><strong>动态原型方法</strong></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<p>JavaScript 是互联网上最流行的脚本语言，这门语言可用于 HTML 和 web，更可广泛用于服务器、PC、笔记本电脑、平板电脑和智能手机等设备。</p>
</blockquote>
]]>
    
    </summary>
    
      <category term="JS" scheme="http://geektao.cc/tags/JS/"/>
    
      <category term="JS" scheme="http://geektao.cc/categories/JS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[技术篇-C#]]></title>
    <link href="http://geektao.cc/2015/01/22/%E6%8A%80%E6%9C%AF%E7%AF%87-C/"/>
    <id>http://geektao.cc/2015/01/22/技术篇-C/</id>
    <published>2015-01-22T08:12:37.000Z</published>
    <updated>2015-01-22T09:05:09.000Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p><strong>在将近一年的工作时间里，无论是在忙碌的工作过程中还是在日常的学习过程中都离不开博客园里面各位“大牛”的默默奉献。虽然接触博客园的时间并不长，但如今到公司的第一件事就是习惯性的打开博客园的首页，搜寻适合自己的学习资源和干货。在各种教程的指点下解决了项目中出现的许多难题和技术上的弥补了许多技术上的薄弱环节。通过将博客园中理论知识和实际工作实践相结合让我这一年受益良多。在此将学习和工作过程中总结的一些 运用比较宽泛的知识点总结整理一下供以后参考温习。</strong></p>
</blockquote>
<p>C#  从语言结构上可以大致分为<strong>基本构成语法</strong>和自身语言特性<strong>面向对象</strong>。</p>
<hr>
<a id="more"></a>

<h1 id="基本构成">基本构成</h1>
<h3 id="一、语言基础">一、语言基础</h3>
<h4 id="语句元素">语句元素</h4>
<h5 id="_1、数据类型"><strong> 1、数据类型</strong></h5>
<ul>
<li><strong>一般数据类型:</strong>值类型（整数、字符、实数、Boolean、Struct、Enum）,存在堆栈中。<br> &ensp; &ensp; &ensp; &ensp; &ensp;  &ensp; &ensp; &ensp; &ensp; &ensp; 引用类型（类、接口、数组）。<br> &ensp; &ensp;&ensp; &ensp; &ensp; &ensp;  &ensp; &ensp;&ensp; &ensp;&ensp; 类型转换（数值转换、枚举转换、引用转换、装箱转换、拆箱转换、转换检查）。</li>
<li><strong>特殊:</strong>委托。 <h5 id="_2、变量与常量"><strong> 2、变量与常量</strong></h5>
</li>
<li><strong>常见变量类型：</strong>int、flot、double、、bool、string、char、数组类型、泛型。</li>
<li><strong>常量类型：</strong> Const、ReadOnly。</li>
</ul>
<h5 id="_3、运算符"><strong> 3、运算符</strong></h5>
<ul>
<li><strong>算数运算符：</strong>+、-、*、/、%。</li>
<li><strong>逻辑运算符：</strong>||、&amp;&amp;、！。</li>
<li><strong>条件预算符：</strong>？：。</li>
<li><strong>类型转换：</strong> O</li>
<li><strong>操作数类型：</strong> typeof（string）</li>
</ul>
<h5 id="_5、注释"><strong> 5、注释</strong></h5>
<ul>
<li><strong>单行注释：</strong>//</li>
<li><strong>多行注释：</strong>/<strong><strong><strong><strong><strong><strong>*</strong></strong></strong></strong></strong></strong>/</li>
<li><strong>文件注释：</strong>   &lt; summary&gt;&lt; param&gt;…. &lt; /param&gt;&lt; /summary&gt;</li>
</ul>
<h4 id="流控制语句"><strong>流控制语句</strong></h4>
<ul>
<li><em>switch （）case：  default：</em></li>
<li><em>if…else if…else…</em></li>
<li><em>for</em></li>
<li><em>while…do…</em>  </li>
<li><em>do…while…</em>  </li>
<li><em>foreach</em></li>
<li><em>goto</em></li>
<li><em>break</em></li>
<li><em>continue</em></li>
</ul>
<h3 id="二、基本特性">二、基本特性</h3>
<h4 id="_1、程序集"><strong> 1、程序集</strong></h4>
<ul>
<li><strong>命名空间</strong></li>
<li><strong>异常处理：</strong> try（）catch{} finnally{} ,抛出异常。</li>
<li><strong>组件</strong></li>
</ul>
<h4 id="_2、大小写敏感"><strong> 2、大小写敏感</strong></h4>
<ul>
<li><strong>Camel</strong></li>
<li><strong>pascal</strong></li>
</ul>
<h1 id="面向对象">面向对象</h1>
<h3 id="一、类">一、类</h3>
<h4 id="_1、性质"><strong> 1、性质</strong></h4>
<ul>
<li><strong>可见性</strong></li>
<li><strong>特性：</strong>重写、覆盖、重载（属性重载、方法重载、函数重载、运算符重载）。</li>
</ul>
<h4 id="_2、成员"><strong> 2、成员</strong></h4>
<ul>
<li><strong>一般：</strong>属性、方法、函数。</li>
<li><strong>特殊：</strong>索引器。</li>
</ul>
<h4 id="_3、分类"><strong> 3、分类</strong></h4>
<ul>
<li><strong>特殊类：</strong>静态类、抽象类、密封类。</li>
<li><strong>常用类：</strong>外部类（Console）、类库（Object基类、字符串类、异常类{参数有关、成员访问、数组异常、算数异常、文件传输输出异常、处理未预料的异常}）。</li>
</ul>
<h3 id="二、特性">二、特性</h3>
<h4 id="1、封装">1、<strong>封装</strong></h4>
<p> &ensp; &ensp; &ensp; &ensp; 概念：将数据和函数集合在一个个单元中，被封装的对象称之为对象数据模型。<br>   &ensp; &ensp; &ensp; &ensp;  意义：保护和防止代码（数据）被无意的破坏。<br>      &ensp; &ensp; &ensp; &ensp; 方法：（1）访问修饰符（2）属性。</p>
<h4 id="2、继承">2、<strong>继承</strong></h4>
<p>  &ensp; &ensp; &ensp; &ensp;意义：代码重用，节省开发时间。<br> &ensp; &ensp; &ensp; &ensp;方法（1）new（2）base（3）重写。</p>
<h4 id="3、_多态">3、 <strong>多态</strong></h4>
<p>&ensp; &ensp;&ensp; &ensp; &ensp;意义：同一操作作用于不同的对象，可以有不同的解释，产生不同的执行结果。在运行时，可以通过指向基类的指针，来调用实现派生类中的方法。<br>&ensp; &ensp; &ensp;&ensp;&ensp;   形态：编译时多态（非虚成员重载）、运行时多态（虚成员）。<br>&ensp; &ensp;&ensp; &ensp; &ensp;实现：接口多态性、继承多态性（override重写父类中virtual修饰的方法）、抽象类实现。</p>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<p><strong>在将近一年的工作时间里，无论是在忙碌的工作过程中还是在日常的学习过程中都离不开博客园里面各位“大牛”的默默奉献。虽然接触博客园的时间并不长，但如今到公司的第一件事就是习惯性的打开博客园的首页，搜寻适合自己的学习资源和干货。在各种教程的指点下解决了项目中出现的许多难题和技术上的弥补了许多技术上的薄弱环节。通过将博客园中理论知识和实际工作实践相结合让我这一年受益良多。在此将学习和工作过程中总结的一些 运用比较宽泛的知识点总结整理一下供以后参考温习。</strong></p>
</blockquote>
<p>C#  从语言结构上可以大致分为<strong>基本构成语法</strong>和自身语言特性<strong>面向对象</strong>。</p>
<hr>
]]>
    
    </summary>
    
      <category term="C#" scheme="http://geektao.cc/tags/C/"/>
    
      <category term="后端" scheme="http://geektao.cc/categories/%E5%90%8E%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[初学Hexo]]></title>
    <link href="http://geektao.cc/2015/01/07/%E5%88%9D%E5%AD%A6Hexo/"/>
    <id>http://geektao.cc/2015/01/07/初学Hexo/</id>
    <published>2015-01-07T10:35:51.000Z</published>
    <updated>2015-01-22T09:00:27.000Z</updated>
    <content type="html"><![CDATA[<h4 id="导语">导语</h4>
<blockquote>
<h5 id="&ensp;&ensp;去年年末一个偶然的机会接触到Hexo，刚刚着手学习的时候一头雾水无从下手。由于一种好奇心的驱使和Hexo简洁优雅的页面吸引着我，于是在“简书”里搜索相关的教程，经过一段时间的摸索后终于搭建起属于自己的Hexo博客。但由于学习的时候参考众多其他大牛的博客，没有形成一个完整的知识体系导致知识点比较分散。今天是2015年的第一个工作周，趁这个很有纪念意义的一周将自己学习hexo的经验记录下来和大家一起分享，也便于自己日后的查阅和知识点的巩固。">&ensp;&ensp;去年年末一个偶然的机会接触到Hexo，刚刚着手学习的时候一头雾水无从下手。由于一种好奇心的驱使和Hexo简洁优雅的页面吸引着我，于是在“简书”里搜索相关的教程，经过一段时间的摸索后终于搭建起属于自己的Hexo博客。但由于学习的时候参考众多其他大牛的博客，没有形成一个完整的知识体系导致知识点比较分散。今天是2015年的第一个工作周，趁这个很有纪念意义的一周将自己学习hexo的经验记录下来和大家一起分享，也便于自己日后的查阅和知识点的巩固。</h5>
</blockquote>
<a id="more"></a>

<h4 id="一、_hexo是什么呢？">一、 hexo是什么呢？</h4>
<hr>
<h5 id="Hexo_是一个由Node-js驱动的,简单、快速、强大的Blog框架。可以快速的生成静态网页托管在GitHub、BAE等平台上。对Markdown有很好的支持，并支持从Wordpress、Octopress迁移。">Hexo 是一个由Node.js驱动的,简单、快速、强大的Blog框架。可以快速的生成静态网页托管在GitHub、BAE等平台上。对Markdown有很好的支持，并支持从Wordpress、Octopress迁移。</h5>
<hr>
<h4 id="二、如何快速搭建hexo环境？">二、如何快速搭建hexo环境？</h4>
<hr>
<p>1.<strong> 安装环境</strong></p>
<ul>
<li>下载Git 环境（<a href="https://mac.github.com/" target="_blank" rel="external">将生成的博客deploy或fork到你的github上</a>)</li>
<li>下载node.js(<a href="http://nodejs.org/download/" target="_blank" rel="external">用来安装hexo环境</a>)</li>
</ul>
<p>  <strong>注意 安装完成后添加Path环境变量，使npm命令生效</strong></p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">;D:<span class="command">\Program</span> Files<span class="command">\nodejs</span><span class="command">\node</span>_modules<span class="command">\npm</span></div></pre></td></tr></table></figure>

<p>2.<strong> 安装 hexo </strong><br><code>$ npm install - g hexo</code></p>
<blockquote>
<h4 id="Mac_用户">Mac 用户</h4>
<p> 编译时您可能遇到的一些问题。 请先安装Xcode从应用程序商店。 Xcode安装后,打开Xcode,去首选项- &gt;下载- &gt;命令行工具- &gt;安装安装命令行工具。</p>
</blockquote>
<p>3.<strong> 安装完hexo后，执行hexo命令生成hexo文件到你本地的指定文件夹 </strong></p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$ </span>hexo init &lt;foloder&gt;</div><div class="line"><span class="variable">$ </span>cd &lt;floder&gt;</div><div class="line"><span class="variable">$ </span>hexo install</div></pre></td></tr></table></figure>

<p>4.<strong> hexo主题的clone</strong></p>
<ul>
<li><strong> 新版本注意需要安装以下插件 </strong></li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">npm <span class="operator"><span class="keyword">install</span> hexo-renderer-ejs <span class="comment">--save</span></span></div><div class="line">npm <span class="keyword">install</span> hexo-renderer-stylus <span class="comment">--save</span></div><div class="line">npm <span class="keyword">install</span> hexo-renderer-marked <span class="comment">--save</span></div></pre></td></tr></table></figure>

<ul>
<li><strong> 安装 </strong><br><code>$ git clone https://github.com/litten/hexo-theme-yilia.git themes/yilia</code></li>
<li><strong> 配置 </strong></li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> themes/yilia</div><div class="line">git pull</div></pre></td></tr></table></figure>

<hr>
<h4 id="三、怎么在hexo中新建文档？">三、怎么在hexo中新建文档？</h4>
<hr>
<ul>
<li><strong> 写文章 </strong><br>执行new命令，生成指定名称的文章至 hexo\source_posts\postName.md 。<br><code>hexo new [layout] &quot;postName&quot; #新建文章</code></li>
<li><strong> 配置 </strong><br>其中layout是可选参数，默认值为post。有哪些layout呢，请到 scaffolds 目录下查看，这些文件名称就是layout名称。当然你可以添加自己的layout，方法就是添加一个文件即可，同时你也可以编辑现有的layout，比如post的layout默认是 hexo\scaffolds\post.md</li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">title</span>: <span class="string">{ { title } }</span></div><div class="line"><span class="attribute">date</span>: <span class="string">{ { date } }</span></div><div class="line"><span class="attribute">categories</span>: <span class="string">:</span></div></pre></td></tr></table></figure>

<ul>
<li><strong> fancybox配置</strong><br>可能有人对这个 Reading 页面中图片的 fancybox 效果感兴趣，这个是怎么做的呢。<br>很简单，只需要在你的文章*.md文件的头上添加 photos 项即可，然后一行行添加你要展示的照片：</li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="label">layout:</span> { { layout } }</div><div class="line"><span class="label">title:</span> { { title } }</div><div class="line"><span class="label">date:</span> { { date } }</div><div class="line"><span class="label">tags:</span> </div><div class="line"><span class="label">photos:</span> </div><div class="line">\---</div></pre></td></tr></table></figure>

<ul>
<li><strong> 描述 </strong><br>markdown文件头中也可以添加description，以覆盖全局配置文件中的description内容，请参考下文 _config.yml 的介绍。</li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="label">title:</span> hexo你的博客</div><div class="line"><span class="label">date:</span> <span class="number">2013</span>-<span class="number">11</span>-<span class="number">22</span> <span class="number">17</span>:<span class="number">11</span>:<span class="number">54</span></div><div class="line"><span class="label">categories:</span> default</div><div class="line"><span class="label">tags:</span> [hexo]</div><div class="line"><span class="label">description:</span> 你对本页的描述</div><div class="line">\---</div></pre></td></tr></table></figure>

<ul>
<li><strong> 文章摘要 </strong><br>在需要显示摘要的地方添加如下代码即可：</li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">以上是摘要</div><div class="line"><span class="comment">&lt;!--more--&gt;</span></div><div class="line">以下是余下全文</div><div class="line">\---</div></pre></td></tr></table></figure>

<hr>
<h4 id="四、如何发布更新文章？">四、如何发布更新文章？</h4>
<hr>
<ul>
<li>$ hexo new [layout] &lt; title  &gt; #建立新文章，默认在_posts下，layout=”draft”时发布的是草稿 </li>
<li>$ hexo publish &lt; filename &gt; #将_drafts下的文件放到_posts下，也就是发布草稿</li>
<li>$ hexo generate #生成静态网页</li>
<li>$ hexo server #启动预览服务器，开启-d选项时可以预览草稿</li>
<li>$ hexo deploy #发布到远程服务器，开启—generate选项可以在deploy前自动generate </li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<h4 id="导语">导语</h4>
<blockquote>
<h5 id="&ensp;&ensp;去年年末一个偶然的机会接触到Hexo，刚刚着手学习的时候一头雾水无从下手。由于一种好奇心的驱使和Hexo简洁优雅的页面吸引着我，于是在“简书”里搜索相关的教程，经过一段时间的摸索后终于搭建起属于自己的Hexo博客。但由于学习的时候参考众多其他大牛的博客，没有形成一个完整的知识体系导致知识点比较分散。今天是2015年的第一个工作周，趁这个很有纪念意义的一周将自己学习hexo的经验记录下来和大家一起分享，也便于自己日后的查阅和知识点的巩固。">&ensp;&ensp;去年年末一个偶然的机会接触到Hexo，刚刚着手学习的时候一头雾水无从下手。由于一种好奇心的驱使和Hexo简洁优雅的页面吸引着我，于是在“简书”里搜索相关的教程，经过一段时间的摸索后终于搭建起属于自己的Hexo博客。但由于学习的时候参考众多其他大牛的博客，没有形成一个完整的知识体系导致知识点比较分散。今天是2015年的第一个工作周，趁这个很有纪念意义的一周将自己学习hexo的经验记录下来和大家一起分享，也便于自己日后的查阅和知识点的巩固。</h5>
</blockquote>
]]>
    
    </summary>
    
      <category term="Hexo" scheme="http://geektao.cc/tags/Hexo/"/>
    
      <category term="博客搭建" scheme="http://geektao.cc/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
  </entry>
  
</feed>
